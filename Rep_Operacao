from SisLoc.classes.operacao import Operacao
from SisLoc.classes.reserva import Reserva
from SisLoc.classes.locacao import Locacao


class Repos_operacao:
    def __init__(self):
        self._operacoes = list()

    def cadastrar(self, operacao: Operacao):
        if operacao in self._operacoes:
            print('Operação ja existe.')
        else:
            self._operacoes.append(operacao)
            operacao.set_ativo(True)

    def buscar_reservas(self, cpf: str):
        reservas = list()
        for i in range(len(self._operacoes)):
            if isinstance(self._operacoes[i], Reserva):
                if self._operacoes[i].get_cpf() == cpf and self._operacoes[i].is_ativo() is True:
                    reservas.append(self._operacoes[i])
            return reservas

    def buscar_locacoes(self, cpf: str):
        locacoes = list()
        for i in range(len(self._operacoes)):
            if isinstance(self._operacoes[i], Locacao):
                if self._operacoes[i].get_cpf() == cpf and self._operacoes[i].is_ativo() is True:
                    locacoes.append(self._operacoes[i])
            return locacoes

    def del_locacao(self, cpf: str, codigo: int):
        for i in range(len(self._operacoes)):
            if isinstance(self._operacoes[i], Locacao) and self._operacoes[i].get_cpf() == cpf:
                if self._operacoes[i].is_ativo() is True and self._operacoes[i].get_cod() == codigo:
                    self._operacoes[i].set_ativo(False)

    def del_reserva(self, cpf: str, codigo: int):
        for i in range(len(self._operacoes)):
            if isinstance(self._operacoes[i], Reserva) and self._operacoes[i].get_cpf() == cpf:
                if self._operacoes[i].is_ativo() is True and self._operacoes[i].get_cod() == codigo:
                    self._operacoes[i].set_ativo(False)

    def listar_loc(self, cpf: str):
        for i in range(len(self._operacoes)):
            if isinstance(self._operacoes[i], Locacao) and self._operacoes[i].get_cpf() == cpf:
                print(f'Cod.: {self._operacoes[i].get_cod()}\nAtivo: {self._operacoes[i].is_ativo()}')

    def n_loc_cliente(self, cpf: str):
        count = 0
        for op in self._operacoes:
            if isinstance(self._operacoes[op], Locacao) and self._operacoes[op].get_cpf() == cpf:
                count += 1
        return count

    def n_loc_filme(self, codigo: int):
        count = 0
        for op in self._operacoes:
            if isinstance(self._operacoes[op], Locacao) and self._operacoes[op].get_cod() == codigo:
                count += 1
        return count

    def n_loc_ativo_cliente(self, cpf: str):
        count = self.buscar_locacoes(cpf)
        return len(count)

    def n_loc_ativo_filme(self, codigo: int):
        count = 0
        for op in self._operacoes:
            if isinstance(self._operacoes[op], Locacao) and self._operacoes[op].get_cod() == codigo:
                if self._operacoes[op].is_ativo() is True:
                    count += 1
        return count

    def n_res_ativo_filme(self, codigo: int):
        count = 0
        for op in self._operacoes:
            if isinstance(self._operacoes[op], Reserva) and self._operacoes[op].get_cod() == codigo:
                if self._operacoes[op].is_ativo() is True:
                    count += 1
        return count
